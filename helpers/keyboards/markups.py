import locale
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton, KeyboardButton, InlineKeyboardMarkup
from database.models import Book
from .fabric import MenuCallback, BuyProduct, FilterSettingsCallback, OrderByCallback
from database.functions import get_genres, get_authors

btn_main_menu = InlineKeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data=MenuCallback(action='back_menu').pack())
btn_filter = InlineKeyboardButton(text='–ö —Ñ–∏–ª—å—Ç—Ä–∞–º', callback_data=MenuCallback(action='filter_settings').pack())

def menu():
    markup = InlineKeyboardBuilder()

    btn_show_products = InlineKeyboardButton(text='–ö–∞—Ç–∞–ª–æ–≥ üìö', callback_data=MenuCallback(action='show_catalog').pack())
    btn_show_profile = InlineKeyboardButton(text='–ü—Ä–æ—Ñ–∏–ª—å üë§', callback_data=MenuCallback(action='show_profile').pack())
    # btn_settings = InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô', callback_data=MenuCallback(action='show_settings').pack())

    markup.add(btn_show_products)
    markup.add(btn_show_profile)
    # markup.row(btn_settings)

    return markup.as_markup(resize_keyboard=True)

def catalog():
    markup = InlineKeyboardBuilder()

    btn_show_products = InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏', callback_data=MenuCallback(action='show_products').pack())
    btn_show_filter = InlineKeyboardButton(text='–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data=MenuCallback(action='filter_settings').pack())

    markup.row(btn_show_products)
    markup.row(btn_show_filter)

    return markup.as_markup()

def products():
    markup = InlineKeyboardBuilder()

    btn_settings = InlineKeyboardButton(text='–§–∏–ª—å—Ç—Ä', callback_data=MenuCallback(action='filter_settings').pack())
    btn_main_menu = InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=MenuCallback(action='back_menu').pack())

    markup.add(btn_settings)
    markup.add(btn_main_menu)

    return markup.as_markup(resize_keyboard=True)

def buy_product(price, id, is_paper):
    markup = InlineKeyboardBuilder()

    btn_buy = InlineKeyboardButton(text=f'–ö—É–ø–∏—Ç—å {price} ‚ÇΩ',
                                   callback_data=BuyProduct(action='buy',
                                                            product_id=id,
                                                            is_paper=is_paper
                                                            ).pack())

    markup.add(btn_buy)

    return markup.as_markup(resize_keyboard=True)

def filter_settings():
    markup = InlineKeyboardBuilder()

    btn_genre = InlineKeyboardButton(text='–ñ–∞–Ω—Ä üé≠', callback_data=FilterSettingsCallback(category='genre').pack())
    btn_author = InlineKeyboardButton(text='–ê–≤—Ç–æ—Ä üë§', callback_data=FilterSettingsCallback(category='author').pack())
    btn_digital_books = InlineKeyboardButton(text='–¶–∏—Ñ—Ä–æ–≤—ã–µ –∫–Ω–∏–≥–∏ üì±', callback_data=FilterSettingsCallback(category='digital').pack())
    btn_paper_books = InlineKeyboardButton(text='–ë—É–º–∞–∂–Ω—ã–µ –∫–Ω–∏–≥–∏ üìï', callback_data=FilterSettingsCallback(category='paper').pack())
    btn_price = InlineKeyboardButton(text='–î–µ—à—ë–≤—ã–µ üí∏', callback_data=FilterSettingsCallback(category='low_price').pack())
    btn_popular = InlineKeyboardButton(text='–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ ‚≠ê', callback_data=FilterSettingsCallback(category='popular').pack())

    markup.row(btn_genre)
    markup.row(btn_author)
    markup.row(btn_digital_books)
    markup.row(btn_paper_books)
    markup.row(btn_price)
    markup.row(btn_popular)
    markup.row(btn_main_menu)

    return markup.as_markup()

async def genre_list():
    markup = InlineKeyboardBuilder()

    genres = await get_genres()
    for genre in genres:
        markup.row(InlineKeyboardButton(text=genre, callback_data=OrderByCallback(type='genre', value=genre).pack()))
    markup.row(btn_filter)
    return markup.as_markup()

async def author_list():
    markup = InlineKeyboardBuilder()

    authors = await get_authors()
    for author in authors:
        markup.row(InlineKeyboardButton(text=author, callback_data=OrderByCallback(type='author', value=author).pack()))
    markup.row(btn_filter)
    return markup.as_markup()